name: CI/CD

on:
  push:
    branches:
      - "*"
    tags:
      - "*"
  pull_request:

jobs:
  test:
    services: # https://docs.github.com/en/actions/guides/creating-redis-service-containers
      redis:
        image: redis
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: [3.7]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install '.[dev]'
    - name: Check for vulnerabilities in libraries
      run: safety check
    - name: Lint
      run: flake8
    - name: Test
      run: pytest
      env:
        REDIS_HOST: redis  # this is the hostname for the service container

  publish:
    # only trigger on pushes to the main repo (not forks, and not PRs)
    if: ${{ github.repository == 'funcx-faas/funcx-forwarder' && github.event_name == 'push' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Extract tag name
      shell: bash
      run: echo "##[set-output name=imagetag;]$(echo ${GITHUB_REF##*/})"
      id: extract_tag_name

    - name: Build funcx-forwarder Image
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: funcx/forwarder:${{ steps.extract_tag_name.outputs.imagetag }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tag: "${GITHUB_REF##*/}"

#  If this is a merge to main branch then we want to restart the web service
#  pod on dev cluster to pick up the changes
  deploy:
    needs: publish
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: scale to webservice pods to zero
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}
        with:
          args:  scale deployment funcx-forwarder --replicas=0

      - name: scale to webservice pods back up
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA_STAGING }}
        with:
          args:  scale deployment funcx-forwarder --replicas=1
